{"version":3,"file":"model.js","sourceRoot":"","sources":["../src/model.ts"],"names":[],"mappings":"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","sourcesContent":["let dirCommon = 'src/common/db/';\r\nlet fileFront = 'src/client/app/db/index.ts';\r\nlet fileBack = 'src/server/db.ts';\r\nimport { error, hyphen, createDir, writeFile, tplFile, tpl, addBeforeMulti, addBefore, deleteFile, removeLines, removeLine } from './tools';\r\n\r\nlet vars: any = { dirCommon, fileFront, fileBack }\r\nclass Tool {\r\n  static actions(short = true): string[] {\r\n    return short ? ['create (c)', 'remove (r)'] : ['create', 'remove'];\r\n  }\r\n  static do(action: string): (args: string[]) => void {\r\n    switch (action) {\r\n      case 'c':\r\n      case 'create': return Tool.create;\r\n      case 'r':\r\n      case 'remove': return Tool.remove;\r\n      default: error((action ? 'unkown action \"' + action + '\"' : 'must define an action') + '\\navailable actions: ' + Tool.actions().join(', ')); return;\r\n    }\r\n  }\r\n  static init(args: string[]) {\r\n    if (args.length) {\r\n      vars.Name = args[0];\r\n      if (args[1]) {\r\n        if ((args[1] === 'true') || (args[1] === 'false')) {\r\n          vars.name = hyphen(args[0]);\r\n          vars.auth = args[1] === 'true' ? 'Auth' : '';\r\n        } else {\r\n          vars.name = args[1];\r\n          vars.auth = args[2] === 'true' ? 'Auth' : '';\r\n        }\r\n      } else {\r\n        vars.name = hyphen(args[0]);\r\n        vars.auth = '';\r\n      }\r\n      // console.log(vars);\r\n      return true;\r\n    } else {\r\n      error('use ts-webapp model <' + Tool.actions().join('/') + '> <model name> <filename?> <authentication model (true/false)?>');\r\n      return false;\r\n    }\r\n  }\r\n  public static create(args: string[]) {\r\n    if (!Tool.init(args)) { return; }\r\n    writeFile(\r\n      tpl('{dirCommon}/{name}.def.ts', vars),\r\n      tplFile('model.def.ts', vars)\r\n    );\r\n    addBefore(tpl('{dirCommon}/index.ts', vars), '/// definitions', tpl('export * from \\'./{name}.def\\';', vars));\r\n    addBeforeMulti(vars.fileBack, [\r\n      ['/// imports', tpl('  {Name}ModelScheme, {Name}ModelDefinition,', vars)],\r\n      ['/// exports', tpl('export const {Name}Model = new {auth}Model<{Name}ModelDefinition>(\\'{Name}\\', {Name}ModelScheme);', vars)]\r\n    ]);\r\n    addBeforeMulti(vars.fileFront, [\r\n      ['/// imports', tpl('  {Name}ModelDefinition, {Name}ModelUrl,', vars)],\r\n      ['/// exports', tplFile('model.front.ts', vars)],\r\n      ['/// models', tpl('  {Name}Model,', vars)]\r\n    ]);\r\n  }\r\n  public static remove(args: string[]) {\r\n    if (!Tool.init(args)) { return; }\r\n    deleteFile(tpl('{dirCommon}/{name}.def.ts', vars));\r\n    removeLine(tpl('{dirCommon}/index.ts', vars), tpl('export * from \\'./{name}.def\\';', vars));\r\n    removeLines(vars.fileBack, [\r\n      tpl('  {Name}ModelScheme, {Name}ModelDefinition,', vars),\r\n      tpl('export const {Name}Model = new {auth}Model<{Name}ModelDefinition>(\\'{Name}\\', {Name}ModelScheme);', vars),\r\n      tpl('export const {Name}Model = new Model<{Name}ModelDefinition>(\\'{Name}\\', {Name}ModelScheme);', vars)\r\n    ]);\r\n    removeLines(vars.fileFront, [\r\n      tpl('  {Name}ModelDefinition, {Name}ModelUrl,', vars),\r\n      tplFile('model.front.ts', vars),\r\n      tpl('  {Name}Model,', vars)\r\n    ]);\r\n  }\r\n}\r\nexport { Tool as Model }\r\n"]}