{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AACA,iCAAgC;AAChC,yCAAwC;AACxC,qCAAoC;AACpC,yCAAwC;AACxC,iCAAgC;AAChC,iCAAqC;AAErC;IACE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,EAAE,SAA0B,CAAC;QACjC,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,KAAK,GAAG,CAAC;YACT,KAAK,OAAO;gBAAE,EAAE,GAAG,aAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBAAC,KAAK,CAAC;YAC3C,KAAK,GAAG,CAAC;YACT,KAAK,WAAW;gBAAE,EAAE,GAAG,qBAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBAAC,KAAK,CAAC;YACnD,KAAK,GAAG,CAAC;YACT,KAAK,SAAS;gBAAE,EAAE,GAAG,iBAAO,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBAAC,KAAK,CAAC;YAC/C,KAAK,GAAG,CAAC;YACT,KAAK,OAAO;gBAAE,EAAE,GAAG,aAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBAAC,KAAK,CAAC;YAC3C,KAAK,GAAG,CAAC;YACT,KAAK,WAAW;gBAAE,EAAE,GAAG,qBAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBAAC,KAAK,CAAC;YACnD,SAAS,aAAK,CAAC,iBAAiB,GAAG,MAAM,GAAG,uFAAuF,CAAC,CAAC;QACvI,CAAC;QACD,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACP,EAAE,CAAC,IAAI,CAAC,CAAC;QACX,CAAC;IACH,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,aAAK,CAAC,iDAAiD,CAAC,CAAC;IAC3D,CAAC;AACH,CAAC;AACD,KAAK,EAAE,CAAC","sourcesContent":["#! /usr/bin/env node\r\nimport { Class } from './class';\r\nimport { Component } from './component';\r\nimport { Service } from './service';\r\nimport { Directive } from './directive';\r\nimport { Model } from './model';\r\nimport { error, tpl } from './tools';\r\ndeclare var process: any;\r\nfunction tools() {\r\n  if (process.argv.length > 2) {\r\n    let object = process.argv[2];\r\n    let action = process.argv[3];\r\n    let fn: (args: string[]) => void;\r\n    let args = process.argv.slice(4);\r\n    switch (object) {\r\n      case 'l':\r\n      case 'class': fn = Class.do(action); break;\r\n      case 'c':\r\n      case 'component': fn = Component.do(action); break;\r\n      case 's':\r\n      case 'service': fn = Service.do(action); break;\r\n      case 'm':\r\n      case 'model': fn = Model.do(action); break;\r\n      case 'd':\r\n      case 'directive': fn = Directive.do(action); break;\r\n      default: error('unkown object \"' + object + '\"\\navailable objects: class (l), component (c), service (s), directive (d), model (m)');\r\n    }\r\n    if (fn) {\r\n      fn(args);\r\n    }\r\n  } else {\r\n    error('use ts-webapp <object> <action> <parameters...>');\r\n  }\r\n}\r\ntools();"]}