{"version":3,"file":"service.js","sourceRoot":"","sources":["../src/service.ts"],"names":[],"mappings":"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","sourcesContent":["let dir = 'src/client/app/service/';\r\nimport { Tools } from './tools';\r\n\r\nclass Tool {\r\n  static _name: string;\r\n  static _Name: string;\r\n  static actions(short = true): string[] {\r\n    return short ? ['create (c)', 'remove (r)'] : ['create', 'remove'];\r\n  }\r\n  static do(action: string): (args: string[]) => void {\r\n    switch (action) {\r\n      case 'c':\r\n      case 'create': return Tool.create;\r\n      case 'r':\r\n      case 'remove': return Tool.remove;\r\n      default: Tools.error((action ? 'unkown action \"' + action + '\"' : 'must define an action') + '\\navailable actions: ' + Tool.actions().join(', ')); return;\r\n    }\r\n  }\r\n  static init(args: string[]) {\r\n    if (args.length) {\r\n      Tool._Name = args[0];\r\n      Tool._name = args[1] || Tools.hyphen(args[0]);\r\n      return true;\r\n    } else {\r\n      Tools.error('use ts-webapp service <' + Tool.actions().join('/') + '> <service name> <filename?>');\r\n      return false;\r\n    }\r\n  }\r\n  public static create(args: string[]) {\r\n    if (!Tool.init(args)) { return; }\r\n    let file =\r\n`import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable, Subject } from 'rxjs/rx';\r\n\r\n@Injectable()\r\nexport class ${Tool._Name}Service {\r\n  constructor(private http: Http) {}\r\n  dummy(): Observable<any> {\r\n    let subject = new Subject<any>();\r\n    subject.next('data');\r\n    return subject;\r\n  }\r\n}\r\n`;\r\n    Tools.writeFile(dir + Tool._name + '.service.ts', file, function (err) {\r\n      if (err) {\r\n        return Tools.error(err);\r\n      };\r\n      Tools.addBeforeMulti(dir + 'index.ts', [\r\n        ['/// exports', 'export * from \\'./' + Tool._name + '.service\\';'],\r\n        ['/// imports', 'import { ' + Tool._Name + 'Service } from \\'./' + Tool._name + '.service\\';'],\r\n        ['/// services', '  ' + Tool._Name + 'Service,']\r\n      ], () => {});\r\n    });\r\n  }\r\n  public static remove(args: string[]) {\r\n    if (!Tool.init(args)) { return; }\r\n    Tools.deleteFile(dir + Tool._name + '.service.ts', (err) => {\r\n      if (err) { return Tools.error(err); };\r\n      Tools.removeLines(dir + 'index.ts', [\r\n        'export * from \\'./' + Tool._name + '.service\\';',\r\n        'import { ' + Tool._Name + 'Service } from \\'./' + Tool._name + '.service\\';',\r\n        '  ' + Tool._Name + 'Service,'\r\n      ]);\r\n    });\r\n  }\r\n}\r\nexport { Tool as Service}"]}