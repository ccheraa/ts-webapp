{"version":3,"file":"class.js","sourceRoot":"","sources":["../src/class.ts"],"names":[],"mappings":";AAAA,IAAI,GAAG,GAAG,mBAAmB,CAAC;AAC9B,iCAAgC;AAEhC;IAAA;IA6CA,CAAC;IA1CQ,YAAO,GAAd,UAAe,KAAY;QAAZ,sBAAA,EAAA,YAAY;QACzB,MAAM,CAAC,KAAK,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC;IACM,OAAE,GAAT,UAAU,MAAc;QACtB,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,KAAK,GAAG,CAAC;YACT,KAAK,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC,KAAK,GAAG,CAAC;YACT,KAAK,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC;gBAAS,aAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,iBAAiB,GAAG,MAAM,GAAG,GAAG,GAAG,uBAAuB,CAAC,GAAG,uBAAuB,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC;QAC5J,CAAC;IACH,CAAC;IACM,SAAI,GAAX,UAAY,IAAc;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,aAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,aAAK,CAAC,KAAK,CAAC,uBAAuB,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,4BAA4B,CAAC,CAAC;YAC/F,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IACa,WAAM,GAApB,UAAqB,IAAc;QACjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QAAC,CAAC;QACjC,IAAI,IAAI,GACZ,kBAAgB,IAAI,CAAC,KAAK,gCAGzB,CAAC;QACE,aAAK,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,EAAE,IAAI,EAAE,UAAU,GAAG;YACjE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,MAAM,CAAC,aAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC;YAAA,CAAC;YACF,aAAK,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,EAAE,aAAa,EAAE,oBAAoB,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,EAAE,cAAO,CAAC,CAAC,CAAC;QAC9G,CAAC,CAAC,CAAC;IACL,CAAC;IACa,WAAM,GAApB,UAAqB,IAAc;QACjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QAAC,CAAC;QACjC,aAAK,CAAC,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,EAAE;YAC/C,aAAK,CAAC,UAAU,CAAC,GAAG,GAAG,UAAU,EAAE,oBAAoB,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;IACL,CAAC;IACH,WAAC;AAAD,CAAC,AA7CD,IA6CC;AACgB,qBAAK","sourcesContent":["let dir = 'src/common/class/';\r\nimport { Tools } from './tools';\r\n\r\nclass Tool {\r\n  static _name: string;\r\n  static _Name: string;\r\n  static actions(short = true): string[] {\r\n    return short ? ['create (c)', 'remove (r)'] : ['create', 'remove'];\r\n  }\r\n  static do(action: string): (args: string[]) => void {\r\n    switch (action) {\r\n      case 'c':\r\n      case 'create': return Tool.create;\r\n      case 'r':\r\n      case 'remove': return Tool.remove;\r\n      default: Tools.error((action ? 'unkown action \"' + action + '\"' : 'must define an action') + '\\navailable actions: ' + Tool.actions().join(', ')); return;\r\n    }\r\n  }\r\n  static init(args: string[]) {\r\n    if (args.length) {\r\n      Tool._Name = args[0];\r\n      Tool._name = args[1] || Tools.hyphen(args[0]);\r\n      return true;\r\n    } else {\r\n      Tools.error('use ts-webapp class <' + Tool.actions().join('/') + '> <class name> <filename?>');\r\n      return false;\r\n    }\r\n  }\r\n  public static create(args: string[]) {\r\n    if (!Tool.init(args)) { return; }\r\n    let file =\r\n`export class ${Tool._Name}Class {\r\n  id: string;\r\n}\r\n`;\r\n    Tools.writeFile(dir + Tool._name + '.class.ts', file, function (err) {\r\n      if (err) {\r\n        return Tools.error(err);\r\n      };\r\n      Tools.addBefore(dir + 'index.ts', '/// exports', 'export * from \\'./' + Tool._name + '.class\\';', () => {});\r\n    });\r\n  }\r\n  public static remove(args: string[]) {\r\n    if (!Tool.init(args)) { return; }\r\n    Tools.deleteFile(dir + Tool._name + '.class.ts', () => {\r\n      Tools.removeLine(dir + 'index.ts', 'export * from \\'./' + Tool._name + '.class\\';');\r\n    });\r\n  }\r\n}\r\nexport { Tool as Class}"]}