{"version":3,"file":"class.js","sourceRoot":"","sources":["../src/class.ts"],"names":[],"mappings":";AAAA,IAAI,GAAG,GAAG,mBAAmB,CAAC;AAC9B,iCAA+G;AAE/G,IAAI,IAAI,GAAQ,EAAE,GAAG,KAAA,EAAE,CAAA;AACvB;IAAA;IAoCA,CAAC;IAnCQ,YAAO,GAAd,UAAe,KAAY;QAAZ,sBAAA,EAAA,YAAY;QACzB,MAAM,CAAC,KAAK,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC;IACM,OAAE,GAAT,UAAU,MAAc;QACtB,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,KAAK,GAAG,CAAC;YACT,KAAK,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC,KAAK,GAAG,CAAC;YACT,KAAK,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC;gBAAS,aAAK,CAAC,CAAC,MAAM,GAAG,iBAAiB,GAAG,MAAM,GAAG,GAAG,GAAG,uBAAuB,CAAC,GAAG,uBAAuB,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC;QACtJ,CAAC;IACH,CAAC;IACM,SAAI,GAAX,UAAY,IAAc;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,cAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,aAAK,CAAC,uBAAuB,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,4BAA4B,CAAC,CAAC;YACzF,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IACa,WAAM,GAApB,UAAqB,IAAc;QACjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QAAC,CAAC;QACjC,iBAAS,CACP,WAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,EAClC,eAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAC1B,CAAC;QACF,iBAAS,CAAC,WAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,aAAa,EAAE,WAAG,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC,CAAC;IACxG,CAAC;IACa,WAAM,GAApB,UAAqB,IAAc;QACjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QAAC,CAAC;QACjC,kBAAU,CAAC,WAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC,CAAC;QAC/C,kBAAU,CAAC,WAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,WAAG,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC,CAAC;IAC1F,CAAC;IACH,WAAC;AAAD,CAAC,AApCD,IAoCC;AACgB,qBAAK","sourcesContent":["let dir = 'src/common/class/';\r\nimport { error, hyphen, createDir, writeFile, tplFile, tpl, addBefore, deleteFile, removeLine } from './tools';\r\n\r\nlet vars: any = { dir }\r\nclass Tool {\r\n  static actions(short = true): string[] {\r\n    return short ? ['create (c)', 'remove (r)'] : ['create', 'remove'];\r\n  }\r\n  static do(action: string): (args: string[]) => void {\r\n    switch (action) {\r\n      case 'c':\r\n      case 'create': return Tool.create;\r\n      case 'r':\r\n      case 'remove': return Tool.remove;\r\n      default: error((action ? 'unkown action \"' + action + '\"' : 'must define an action') + '\\navailable actions: ' + Tool.actions().join(', ')); return;\r\n    }\r\n  }\r\n  static init(args: string[]) {\r\n    if (args.length) {\r\n      vars.Name = args[0];\r\n      vars.name = args[1] || hyphen(args[0]);\r\n      return true;\r\n    } else {\r\n      error('use ts-webapp class <' + Tool.actions().join('/') + '> <class name> <filename?>');\r\n      return false;\r\n    }\r\n  }\r\n  public static create(args: string[]) {\r\n    if (!Tool.init(args)) { return; }\r\n    writeFile(\r\n      tpl('{dir}/{name}.class.ts', vars),\r\n      tplFile('class.ts', vars)\r\n    );\r\n    addBefore(tpl('{dir}/index.ts', vars), '/// exports', tpl('export * from \\'./{name}.class\\';', vars));\r\n  }\r\n  public static remove(args: string[]) {\r\n    if (!Tool.init(args)) { return; }\r\n    deleteFile(tpl('{dir}/{name}.class.ts', vars));\r\n    removeLine(tpl('{dir}/index.ts', vars), tpl('export * from \\'./{name}.class\\';', vars));\r\n  }\r\n}\r\nexport { Tool as Class }\r\n"]}