{"version":3,"file":"tools.js","sourceRoot":"","sources":["../src/tools.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\r\nimport * as rimraf from 'rimraf';\r\nimport * as format from 'string-template';\r\nimport { join } from 'path';\r\nimport { blue, red } from 'chalk';\r\nexport function createDir(dirname: string) {\r\n  fs.mkdirSync(dirname);\r\n}\r\nexport function deleteDir(dirname: string, callback?: (err: NodeJS.ErrnoException) => void) {\r\n  rimraf(dirname, callback);\r\n}\r\nexport function writeFile(filename: string, data: any) {\r\n  fs.writeFileSync(filename, data, 'utf8');\r\n}\r\nexport function appendFile(filename: string, data: any) {\r\n  fs.appendFileSync(filename, data, 'utf8');\r\n}\r\nexport function deleteFile(filename: string) {\r\n  fs.unlinkSync(filename);\r\n}\r\nexport function removeLine(filename: string, line: string) {\r\n  replace(filename, [[new RegExp(line.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') + '\\\\r?\\\\n', 'g'), '']]);\r\n}\r\nexport function removeLines(filename: string, lines: string[]) {\r\n  replace(filename,\r\n  lines.map(line => [new RegExp(line.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') + '\\\\r?\\\\n', 'g'), '']));\r\n}\r\nexport function addBefore(filename: string, anchor: string, line: string) {\r\n  replace(filename, [\r\n    [new RegExp(line.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') + '\\\\r?\\\\n', 'g'), ''],\r\n    [anchor, line + '\\n' + anchor]\r\n  ]);\r\n}\r\nexport function addBeforeMulti(filename: string, tags: string[][]) {\r\n  replace(filename, tags.map(tag => [\r\n    [new RegExp(tag[1].replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') + '\\\\r?\\\\n', 'g'), ''],\r\n    [tag[0], tag[1] + '\\n' + tag[0]]\r\n  ]).reduce((tags, tag) => [].concat(tags, tag)));\r\n}\r\nexport function error(err: NodeJS.ErrnoException | string) {\r\n  console.log(red((<NodeJS.ErrnoException>err).message || <string>err));\r\n}\r\nexport function hyphen(name: string): string {\r\n  return name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\nexport function info(message: string) {\r\n  console.log(blue(message));\r\n}\r\nexport function replace(filename, args) {\r\n  let data = fs.readFileSync(filename, 'utf8');\r\n  args.forEach(arg => {\r\n    // console.log(arg[0].test(data));\r\n    data = data.replace(arg[0], arg[1]);\r\n  });\r\n  fs.writeFileSync(filename, data, 'utf8');\r\n}\r\nexport function tpl(template: string, data: any) {\r\n  // console.log(data);\r\n  // console.log(template);\r\n  // console.log(format(template, data));\r\n  return format(template, data);\r\n}\r\nexport function tplFile(filename: string, data: any): string {\r\n  return tpl(fs.readFileSync(join(__dirname, '../src/templates/' + filename), 'utf8'), data);\r\n}\r\n"]}