{"version":3,"file":"tools.js","sourceRoot":"","sources":["../src/tools.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\r\nimport * as rimraf from 'rimraf';\r\nimport { blue, red } from 'chalk';\r\nexport class Tools {\r\n  public static createDir(dirname: string, callback?: (err: NodeJS.ErrnoException) => void) {\r\n    fs.mkdir(dirname, callback);\r\n  }\r\n  public static deleteDir(dirname: string, callback?: (err: NodeJS.ErrnoException) => void) {\r\n    rimraf(dirname, callback);\r\n  }\r\n  public static writeFile(filename: string, data: any, callback?: (err: NodeJS.ErrnoException) => void) {\r\n    fs.writeFile(filename, data, 'utf8', callback);\r\n  }\r\n  public static appendFile(filename: string, data: any, callback?: (err: NodeJS.ErrnoException) => void) {\r\n    fs.appendFile(filename, data, 'utf8', callback);\r\n  }\r\n  public static deleteFile(filename: string, callback?: (err: NodeJS.ErrnoException) => void) {\r\n    fs.unlink(filename, callback);\r\n  }\r\n  public static removeLine(filename: string, line: string, callback?: (err: NodeJS.ErrnoException) => void) {\r\n    Tools.replace(filename, [[new RegExp(line.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') + '\\\\r?\\\\n', 'g'), '']], callback);\r\n  }\r\n  public static removeLines(filename: string, lines: string[], callback?: (err: NodeJS.ErrnoException) => void) {\r\n    Tools.replace(filename,\r\n    lines.map(line => [new RegExp(line.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') + '\\\\r?\\\\n', 'g'), '']),\r\n    callback);\r\n  }\r\n  public static addBefore(filename: string, anchor: string, line: string, callback?: (err: NodeJS.ErrnoException) => void) {\r\n    Tools.replace(filename, [\r\n      [new RegExp(line.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') + '\\\\r?\\\\n', 'g'), ''],\r\n      [anchor, line + '\\n' + anchor]\r\n    ], () => {});\r\n  }\r\n  public static addBeforeMulti(filename: string, tags: string[][], callback?: (err: NodeJS.ErrnoException) => void) {\r\n    Tools.replace(filename, tags.map(tag => [\r\n      [new RegExp(tag[1].replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') + '\\\\r?\\\\n', 'g'), ''],\r\n      [tag[0], tag[1] + '\\n' + tag[0]]\r\n    ]).reduce((tags, tag) => [].concat(tags, tag)),\r\n    () => {});\r\n  }\r\n  public static error(err: NodeJS.ErrnoException | string) {\r\n    console.log(red((<NodeJS.ErrnoException>err).message || <string>err));\r\n  }\r\n  public static hyphen(name: string): string {\r\n    return name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n  }\r\n  public static info(message: string) {\r\n    console.log(blue(message));\r\n  }\r\n  public static replace(filename, args, callback) {\r\n    fs.readFile(filename, 'utf8', (err, data) => {\r\n      if (err) {\r\n        return Tools.error(err);\r\n      }\r\n      args.forEach(arg => {\r\n        // console.log(arg[0].test(data));\r\n        data = data.replace(arg[0], arg[1]);\r\n      });\r\n      fs.writeFile(filename, data, 'utf8', (err) => {\r\n        if (err) {\r\n          return Tools.error(err);\r\n        }\r\n        callback && callback();\r\n      });\r\n    });\r\n  }\r\n}"]}